// Generated by view binder compiler. Do not edit!
package com.kawal.malang.officer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.kawal.malang.officer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BriefingFilterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnApply;

  @NonNull
  public final LinearLayout btnSelectCategory;

  @NonNull
  public final ImageView ivClose;

  @NonNull
  public final RecyclerView rvReportCategory;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvDeleteCategory;

  @NonNull
  public final TextView tvDeleteDate;

  private BriefingFilterBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton btnApply,
      @NonNull LinearLayout btnSelectCategory, @NonNull ImageView ivClose,
      @NonNull RecyclerView rvReportCategory, @NonNull TextView tvCategory,
      @NonNull TextView tvDate, @NonNull TextView tvDeleteCategory,
      @NonNull TextView tvDeleteDate) {
    this.rootView = rootView;
    this.btnApply = btnApply;
    this.btnSelectCategory = btnSelectCategory;
    this.ivClose = ivClose;
    this.rvReportCategory = rvReportCategory;
    this.tvCategory = tvCategory;
    this.tvDate = tvDate;
    this.tvDeleteCategory = tvDeleteCategory;
    this.tvDeleteDate = tvDeleteDate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BriefingFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BriefingFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.briefing_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BriefingFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_apply;
      MaterialButton btnApply = ViewBindings.findChildViewById(rootView, id);
      if (btnApply == null) {
        break missingId;
      }

      id = R.id.btn_select_category;
      LinearLayout btnSelectCategory = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectCategory == null) {
        break missingId;
      }

      id = R.id.iv_close;
      ImageView ivClose = ViewBindings.findChildViewById(rootView, id);
      if (ivClose == null) {
        break missingId;
      }

      id = R.id.rv_report_category;
      RecyclerView rvReportCategory = ViewBindings.findChildViewById(rootView, id);
      if (rvReportCategory == null) {
        break missingId;
      }

      id = R.id.tv_category;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_delete_category;
      TextView tvDeleteCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvDeleteCategory == null) {
        break missingId;
      }

      id = R.id.tv_delete_date;
      TextView tvDeleteDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDeleteDate == null) {
        break missingId;
      }

      return new BriefingFilterBinding((LinearLayout) rootView, btnApply, btnSelectCategory,
          ivClose, rvReportCategory, tvCategory, tvDate, tvDeleteCategory, tvDeleteDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
