// Generated by view binder compiler. Do not edit!
package com.kawal.malang.officer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kawal.malang.officer.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReportItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cvStatus;

  @NonNull
  public final ImageView ivCategory;

  @NonNull
  public final CircleImageView ivReporter;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvPlace;

  @NonNull
  public final TextView tvReporterName;

  @NonNull
  public final TextView tvStatus;

  private ReportItemBinding(@NonNull CardView rootView, @NonNull CardView cvStatus,
      @NonNull ImageView ivCategory, @NonNull CircleImageView ivReporter,
      @NonNull TextView tvCategory, @NonNull TextView tvDate, @NonNull TextView tvPlace,
      @NonNull TextView tvReporterName, @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.cvStatus = cvStatus;
    this.ivCategory = ivCategory;
    this.ivReporter = ivReporter;
    this.tvCategory = tvCategory;
    this.tvDate = tvDate;
    this.tvPlace = tvPlace;
    this.tvReporterName = tvReporterName;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReportItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReportItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.report_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReportItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_status;
      CardView cvStatus = ViewBindings.findChildViewById(rootView, id);
      if (cvStatus == null) {
        break missingId;
      }

      id = R.id.iv_category;
      ImageView ivCategory = ViewBindings.findChildViewById(rootView, id);
      if (ivCategory == null) {
        break missingId;
      }

      id = R.id.iv_reporter;
      CircleImageView ivReporter = ViewBindings.findChildViewById(rootView, id);
      if (ivReporter == null) {
        break missingId;
      }

      id = R.id.tv_category;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_place;
      TextView tvPlace = ViewBindings.findChildViewById(rootView, id);
      if (tvPlace == null) {
        break missingId;
      }

      id = R.id.tv_reporter_name;
      TextView tvReporterName = ViewBindings.findChildViewById(rootView, id);
      if (tvReporterName == null) {
        break missingId;
      }

      id = R.id.tv_status;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ReportItemBinding((CardView) rootView, cvStatus, ivCategory, ivReporter,
          tvCategory, tvDate, tvPlace, tvReporterName, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
