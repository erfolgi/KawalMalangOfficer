// Generated by view binder compiler. Do not edit!
package com.kawal.malang.officer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.kawal.malang.officer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.osmdroid.views.MapView;

public final class FragmentPanicEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cvOfficer;

  @NonNull
  public final CardView cvPatrolStatus;

  @NonNull
  public final FloatingActionButton fabGps;

  @NonNull
  public final ImageView ivArrow;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final RecyclerView rvOfficer;

  @NonNull
  public final TextView tvPatrolStatus;

  private FragmentPanicEventBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cvOfficer,
      @NonNull CardView cvPatrolStatus, @NonNull FloatingActionButton fabGps,
      @NonNull ImageView ivArrow, @NonNull MapView mapView, @NonNull RecyclerView rvOfficer,
      @NonNull TextView tvPatrolStatus) {
    this.rootView = rootView;
    this.cvOfficer = cvOfficer;
    this.cvPatrolStatus = cvPatrolStatus;
    this.fabGps = fabGps;
    this.ivArrow = ivArrow;
    this.mapView = mapView;
    this.rvOfficer = rvOfficer;
    this.tvPatrolStatus = tvPatrolStatus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPanicEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPanicEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_panic_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPanicEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_officer;
      CardView cvOfficer = ViewBindings.findChildViewById(rootView, id);
      if (cvOfficer == null) {
        break missingId;
      }

      id = R.id.cv_patrol_status;
      CardView cvPatrolStatus = ViewBindings.findChildViewById(rootView, id);
      if (cvPatrolStatus == null) {
        break missingId;
      }

      id = R.id.fab_gps;
      FloatingActionButton fabGps = ViewBindings.findChildViewById(rootView, id);
      if (fabGps == null) {
        break missingId;
      }

      id = R.id.iv_arrow;
      ImageView ivArrow = ViewBindings.findChildViewById(rootView, id);
      if (ivArrow == null) {
        break missingId;
      }

      id = R.id.map_view;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.rv_officer;
      RecyclerView rvOfficer = ViewBindings.findChildViewById(rootView, id);
      if (rvOfficer == null) {
        break missingId;
      }

      id = R.id.tv_patrol_status;
      TextView tvPatrolStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvPatrolStatus == null) {
        break missingId;
      }

      return new FragmentPanicEventBinding((ConstraintLayout) rootView, cvOfficer, cvPatrolStatus,
          fabGps, ivArrow, mapView, rvOfficer, tvPatrolStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
