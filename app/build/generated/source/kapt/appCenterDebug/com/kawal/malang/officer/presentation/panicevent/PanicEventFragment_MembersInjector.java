// Generated by Dagger (https://dagger.dev).
package com.kawal.malang.officer.presentation.panicevent;

import com.kawal.malang.officer.presentation.viewmodels.panic.PanicViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PanicEventFragment_MembersInjector implements MembersInjector<PanicEventFragment> {
  private final Provider<PanicOfficerAdapter> adapterProvider;

  private final Provider<PanicViewModelFactory> factoryProvider;

  public PanicEventFragment_MembersInjector(Provider<PanicOfficerAdapter> adapterProvider,
      Provider<PanicViewModelFactory> factoryProvider) {
    this.adapterProvider = adapterProvider;
    this.factoryProvider = factoryProvider;
  }

  public static MembersInjector<PanicEventFragment> create(
      Provider<PanicOfficerAdapter> adapterProvider,
      Provider<PanicViewModelFactory> factoryProvider) {
    return new PanicEventFragment_MembersInjector(adapterProvider, factoryProvider);
  }

  @Override
  public void injectMembers(PanicEventFragment instance) {
    injectAdapter(instance, adapterProvider.get());
    injectFactory(instance, factoryProvider.get());
  }

  @InjectedFieldSignature("com.kawal.malang.officer.presentation.panicevent.PanicEventFragment.adapter")
  public static void injectAdapter(PanicEventFragment instance, PanicOfficerAdapter adapter) {
    instance.adapter = adapter;
  }

  @InjectedFieldSignature("com.kawal.malang.officer.presentation.panicevent.PanicEventFragment.factory")
  public static void injectFactory(PanicEventFragment instance, PanicViewModelFactory factory) {
    instance.factory = factory;
  }
}
