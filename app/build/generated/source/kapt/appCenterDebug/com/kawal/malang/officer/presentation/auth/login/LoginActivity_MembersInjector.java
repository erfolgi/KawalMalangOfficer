// Generated by Dagger (https://dagger.dev).
package com.kawal.malang.officer.presentation.auth.login;

import com.kawal.malang.officer.presentation.viewmodels.auth.AuthViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginActivity_MembersInjector implements MembersInjector<LoginActivity> {
  private final Provider<AuthViewModelFactory> viewModelFactoryProvider;

  public LoginActivity_MembersInjector(Provider<AuthViewModelFactory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<LoginActivity> create(
      Provider<AuthViewModelFactory> viewModelFactoryProvider) {
    return new LoginActivity_MembersInjector(viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(LoginActivity instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.kawal.malang.officer.presentation.auth.login.LoginActivity.viewModelFactory")
  public static void injectViewModelFactory(LoginActivity instance,
      AuthViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
