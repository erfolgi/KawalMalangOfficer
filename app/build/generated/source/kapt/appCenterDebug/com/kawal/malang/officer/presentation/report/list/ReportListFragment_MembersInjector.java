// Generated by Dagger (https://dagger.dev).
package com.kawal.malang.officer.presentation.report.list;

import com.kawal.malang.officer.presentation.viewmodels.panic.PanicViewModelFactory;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ReportListFragment_MembersInjector implements MembersInjector<ReportListFragment> {
  private final Provider<ReportListAdapter> adapterProvider;

  private final Provider<PanicViewModelFactory> viewModelFactoryProvider;

  public ReportListFragment_MembersInjector(Provider<ReportListAdapter> adapterProvider,
      Provider<PanicViewModelFactory> viewModelFactoryProvider) {
    this.adapterProvider = adapterProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  public static MembersInjector<ReportListFragment> create(
      Provider<ReportListAdapter> adapterProvider,
      Provider<PanicViewModelFactory> viewModelFactoryProvider) {
    return new ReportListFragment_MembersInjector(adapterProvider, viewModelFactoryProvider);
  }

  @Override
  public void injectMembers(ReportListFragment instance) {
    injectAdapter(instance, adapterProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
  }

  @InjectedFieldSignature("com.kawal.malang.officer.presentation.report.list.ReportListFragment.adapter")
  public static void injectAdapter(ReportListFragment instance, ReportListAdapter adapter) {
    instance.adapter = adapter;
  }

  @InjectedFieldSignature("com.kawal.malang.officer.presentation.report.list.ReportListFragment.viewModelFactory")
  public static void injectViewModelFactory(ReportListFragment instance,
      PanicViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }
}
